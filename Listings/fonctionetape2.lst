


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ********************
    2 00000000                 THUMB
    3 00000000                 REQUIRE8
    4 00000000                 PRESERVE8
    5 00000000         
    6 00000000         ;*******************************************************
                       *******************
    7 00000000         ;  Fichier Vierge.asm
    8 00000000         ; Auteur : V.MAHOUT
    9 00000000         ; Date :  12/11/2013
   10 00000000         ;*******************************************************
                       *******************
   11 00000000         
   12 00000000         ;***************IMPORT/EXPORT***************************
                       *******************
   13 00000000                 EXPORT           Driverglobal
   14 00000000                 EXPORT           DriverReg
   15 00000000                 EXPORT           Set_SCLK
   16 00000000                 EXPORT           Reset_SCLK
   17 00000000                 EXPORT           Set_SIN
   18 00000000                 EXPORT           Reset_SIN
   19 00000000                 EXPORT           Tempo
   20 00000000                 IMPORT           DataSend
   21 00000000         
   22 00000000         ;*******************************************************
                       *******************
   23 00000000         
   24 00000000         
   25 00000000         
   26 00000000         ;***************CONSTANTES******************************
                       *******************
   27 00000000         
   28 00000000                 include          REG_UTILES.inc
    1 00000000         
    2 00000000         ;**************************************
    3 00000000         ;     Les adresess utiles  
    4 00000000         ;***************************************
    5 00000000         
    6 00000000         
    7 00000000         ;**************************************
    8 00000000         ;     Affectation des bits GPIO  
    9 00000000         ;***************************************
   10 00000000         ; GSLCK..... PA0 
   11 00000000         ; DSPRG..... PA1 
   12 00000000         ; BLANK..... PA2 
   13 00000000         ; XLAT...... PA3
   14 00000000         ; VPRG...... PA4
   15 00000000         ; SCLK...... PA5
   16 00000000         ; SIN1...... PA7
   17 00000000         ;Capteur.....PA8
   18 00000000         
   19 00000000         ;LED.........PB10
   20 00000000         ;****************************************/
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000 40010800 
                       GPIOBASEA



ARM Macro Assembler    Page 2 


                               EQU              0X40010800
   25 00000000 40010C00 
                       GPIOBASEB
                               EQU              0X40010C00
   26 00000000         
   27 00000000 00000008 
                       OffsetInput
                               EQU              0x08
   28 00000000 0000000C 
                       OffsetOutput
                               EQU              0x0C
   29 00000000 00000010 
                       OffsetSet
                               EQU              0x10
   30 00000000 00000014 
                       OffsetReset
                               EQU              0x14
   31 00000000         
   32 00000000         
   33 00000000 00000080 
                       MaskSerial_In1
                               equ              0x80
   34 00000000 00000080 
                       MaskSerial_Dots
                               equ              0x80
   35 00000000 00000010 
                       MaskVprg
                               equ              0x10
   36 00000000 00000008 
                       MaskXlat
                               equ              0x08
   37 00000000 00000004 
                       MaskBlank
                               equ              0x04
   38 00000000 00000020 
                       MaskSclk
                               equ              0x20
   39 00000000 00000002 
                       MaskDsprg
                               equ              0x02
   40 00000000 00000001 
                       MaskGsclk
                               equ              0x01
   41 00000000         
   42 00000000         
   43 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   44 00000000 40012C10 
                       TIM1_SR EQU              0x40012c10
   45 00000000 40012C24 
                       TIM1_CNT
                               EQU              0x40012c24
   46 00000000 4000082C 
                       TIM4_ARR
                               EQU              0x4000082C
   47 00000000 40000810 
                       TIM4_SR EQU              0x40000810
   48 00000000         



ARM Macro Assembler    Page 3 


   49 00000000 000000EF 
                       MILSEC  EQU              239
   50 00000000         
   51 00000000         
   52 00000000         
   53 00000000         
   54 00000000         
   55 00000000                 END
   29 00000000                 include          Lumiere.asm
    1 00000000         ;*******************************************************
                       ********************
    2 00000000                 THUMB
    3 00000000                 REQUIRE8
    4 00000000                 PRESERVE8
    5 00000000         ;*******************************************************
                       *******************
    6 00000000         
    7 00000000         
    8 00000000         ;***************VARIABLES*******************************
                       *******************
    9 00000000                 AREA             MesDonnees, data, readwrite
   10 00000000         ;*******************************************************
                       *******************
   11 00000000         
   12 00000000         
   13 00000000         
   14 00000000         ;*******************************************************
                       *******************
   15 00000000         
   16 00000000         
   17 00000000         
   18 00000000         ;***************CODE************************************
                       *******************
   19 00000000                 AREA             moncode, code, readonly
   20 00000000         ;*******************************************************
                       *******************
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000         
   25 00000000         ;Barrette1 DCB 48 dup(0)   ; Initialiser à 0 
   26 00000000         
   27 00000000         Barrette1
   28 00000000 FF 00 00        DCB              0xFF, 0x00, 0x00
   29 00000003 FF 00 00        DCB              0xFF, 0x00, 0x00
   30 00000006 FF 00 00        DCB              0xFF, 0x00, 0x00
   31 00000009 FF 00 00        DCB              0xFF, 0x00, 0x00
   32 0000000C FF 00 00        DCB              0xFF, 0x00, 0x00
   33 0000000F FF 00 00        DCB              0xFF, 0x00, 0x00
   34 00000012 FF 00 00        DCB              0xFF, 0x00, 0x00
   35 00000015 FF 00 00        DCB              0xFF, 0x00, 0x00
   36 00000018 FF 00 00        DCB              0xFF, 0x00, 0x00
   37 0000001B FF 00 00        DCB              0xFF, 0x00, 0x00
   38 0000001E FF 00 00        DCB              0xFF, 0x00, 0x00
   39 00000021 FF 00 00        DCB              0xFF, 0x00, 0x00
   40 00000024 FF 00 00        DCB              0xFF, 0x00, 0x00
   41 00000027 FF 00 00        DCB              0xFF, 0x00, 0x00
   42 0000002A FF 00 00        DCB              0xFF, 0x00, 0x00
   43 0000002D FF 00 00        DCB              0xFF, 0x00, 0x00



ARM Macro Assembler    Page 4 


   44 00000030         
   45 00000030         
   46 00000030         
   47 00000030         BarretteN
   48 00000030 00 FF 00        DCB              0x00, 0xFF, 0x00
   49 00000033 00 FF 00        DCB              0x00, 0xFF, 0x00
   50 00000036 00 FF 00        DCB              0x00, 0xFF, 0x00
   51 00000039 00 FF 00        DCB              0x00, 0xFF, 0x00
   52 0000003C 00 FF 00        DCB              0x00, 0xFF, 0x00
   53 0000003F 00 FF 00        DCB              0x00, 0xFF, 0x00
   54 00000042 00 FF 00        DCB              0x00, 0xFF, 0x00
   55 00000045 00 FF 00        DCB              0x00, 0xFF, 0x00
   56 00000048 00 FF 00        DCB              0x00, 0xFF, 0x00
   57 0000004B 00 FF 00        DCB              0x00, 0xFF, 0x00
   58 0000004E 00 FF 00        DCB              0x00, 0xFF, 0x00
   59 00000051 00 FF 00        DCB              0x00, 0xFF, 0x00
   60 00000054 00 FF 00        DCB              0x00, 0xFF, 0x00
   61 00000057 00 FF 00        DCB              0x00, 0xFF, 0x00
   62 0000005A 00 FF 00        DCB              0x00, 0xFF, 0x00
   63 0000005D FF FF 00        DCB              0xFF, 0xFF, 0x00
   64 00000060                 END
   30 00000060         ;AREA MesConstantes, data, readwrite
   31 00000060         
   32 00000060         
   33 00000060         
   34 00000060         
   35 00000060         
   36 00000060         
   37 00000060         
   38 00000060         ;*******************************************************
                       *******************
   39 00000060         
   40 00000060         
   41 00000060         ;***************VARIABLES*******************************
                       *******************
   42 00000060                 AREA             MesDonnees, data, readwrite
   43 00000000         ;*******************************************************
                       *******************
   44 00000000         
   45 00000000         
   46 00000000         
   47 00000000         ;*******************************************************
                       *******************
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         ;***************CODE************************************
                       *******************
   52 00000000                 AREA             moncode, code, readonly
   53 00000060         ;*******************************************************
                       *******************
   54 00000060         
   55 00000060         
   56 00000060         
   57 00000060         
   58 00000060         
   59 00000060         ;#######################################################
                       #################
   60 00000060         ; Procédure ????



ARM Macro Assembler    Page 5 


   61 00000060         ;#######################################################
                       #################
   62 00000060         
   63 00000060         
   64 00000060         ;Fonction permettant d'envoyer en série les 576 bits du 
                       tableau
   65 00000060         Driverglobal
                               PROC
   66 00000060         
   67 00000060 F7FF FFFE       BL               Set_SCLK    ; Set(SCLK)
   68 00000064 F04F 0101       MOV              R1, #1      ; Initialisation du
                                                             compteur de LED ? 
                                                            1
   69 00000068         
   70 00000068         BoucleLed
   71 00000068 4F3F            LDR              R7 ,=Barrette1 ; On load les va
                                                            leur de la barette 
                                                            dans R7
   72 0000006A 5C7B            LDRB             R3, [R7, R1] ; R3 = ValCourante
                                                            , On met la valeur 
                                                            de Barette[n] dans 
                                                            R3
   73 0000006C EA4F 6403       LSL              R4, R3, #24 ; (ValCourante) <- 
                                                            (ValCourante) << 24
                                                            
   74 00000070         
   75 00000070 F04F 0500       MOV              R5, #0
   76 00000074         
   77 00000074         BoucleBit
   78 00000074 F7FF FFFE       BL               Reset_SCLK
   79 00000078         
   80 00000078 F014 4F00       TST              R4, #(0x1<<31) ; Compare le bit
                                                             de poid fort 32eme
                                                            
   81 0000007C D102            BNE              Bit1
   82 0000007E F7FF FFFE       BL               Reset_SIN
   83 00000082 E001            B                NextBit
   84 00000084         
   85 00000084         Bit1
   86 00000084 F7FF FFFE       BL               Set_SIN
   87 00000088         
   88 00000088         NextBit
   89 00000088 EA4F 0444       LSL              R4, R4, #1
   90 0000008C F7FF FFFE       BL               Set_SCLK
   91 00000090         
   92 00000090 F105 0501       ADD              R5, R5, #1  ; i++
   93 00000094 2D0C            CMP              R5, #12
   94 00000096 D1ED            BNE              BoucleBit
   95 00000098         
   96 00000098 F101 0101       ADD              R1, R1, #1
   97 0000009C 2930            CMP              R1, #48
   98 0000009E D1E3            BNE              BoucleLed
   99 000000A0         
  100 000000A0 F7FF FFFE       BL               Reset_SCLK
  101 000000A4         
  102 000000A4 F8DF 80C4       LDR              R8 ,=DataSend
  103 000000A8 F04F 0900       MOV              R9, #0
  104 000000AC F888 9000       STRB             R9, [R8]
  105 000000B0         ;MOV DataSend, #0



ARM Macro Assembler    Page 6 


  106 000000B0         
  107 000000B0 4770            BX               LR
  108 000000B2                 ENDP
  109 000000B2         
  110 000000B2         
  111 000000B2         ; Procédure Set: envoie un signal HIGH au registre de do
                       nn?es
  112 000000B2         Set_SCLK
                               PROC
  113 000000B2 B403            PUSH             {R0, R1}
  114 000000B4 482E            LDR              R0, =GPIOBASEA
  115 000000B6 8A01            LDRH             R1,[R0,#OffsetSet]
  116 000000B8 F04F 0120       MOV              R1,#(0x01 << 5)
  117 000000BC 8201            STRH             R1, [R0, #OffsetSet]
  118 000000BE BC03            POP              {R0, R1}
  119 000000C0 4770            BX               LR
  120 000000C2                 ENDP
  121 000000C2         
  122 000000C2         ; Proc?dure Reset: envoie un signal LOW au registre de d
                       onn?es
  123 000000C2         Reset_SCLK
                               PROC
  124 000000C2 B403            PUSH             {R0, R1}
  125 000000C4 482A            LDR              R0, =GPIOBASEA
  126 000000C6 8A81            LDRH             R1,[R0,#OffsetReset]
  127 000000C8 F04F 0120       MOV              R1,#(0x01 << 5)
  128 000000CC 8281            STRH             R1, [R0, #OffsetReset]
  129 000000CE BC03            POP              {R0, R1}
  130 000000D0 4770            BX               LR
  131 000000D2                 ENDP
  132 000000D2         
  133 000000D2         Set_SIN PROC
  134 000000D2 B403            PUSH             {R0, R1}
  135 000000D4 4826            LDR              R0, = GPIOBASEA
  136 000000D6 8A01            LDRH             R1,[R0,#OffsetSet]
  137 000000D8 F04F 0180       MOV              R1,#(0x01 << 7)
  138 000000DC 8201            STRH             R1, [R0, #OffsetSet]
  139 000000DE BC03            POP              {R0, R1}
  140 000000E0 4770            BX               LR
  141 000000E2                 ENDP
  142 000000E2         
  143 000000E2         ; Proc?dure Reset: envoie un signal LOW au registre de d
                       onn?es
  144 000000E2         Reset_SIN
                               PROC
  145 000000E2 B403            PUSH             {R0, R1}
  146 000000E4 4822            LDR              R0, =GPIOBASEA
  147 000000E6 8A81            LDRH             R1,[R0,#OffsetReset]
  148 000000E8 F04F 0180       MOV              R1,#(0x01 << 7)
  149 000000EC 8281            STRH             R1, [R0, #OffsetReset]
  150 000000EE BC03            POP              {R0, R1}
  151 000000F0 4770            BX               LR
  152 000000F2                 ENDP
  153 000000F2         
  154 000000F2         
  155 000000F2         
  156 000000F2         DriverReg
                               PROC
  157 000000F2 B500            PUSH{LR}



ARM Macro Assembler    Page 7 


  158 000000F4 F7FF FFFE       BL               Set_SCLK    ; Set(SCLK)
  159 000000F8 F04F 0101       MOV              R1, #1      ; Initialisation du
                                                             compteur de LED ? 
                                                            1
  160 000000FC         
  161 000000FC         BoucleLed2
  162 000000FC 4607            MOV              R7 ,R0      ; On load les valeu
                                                            r de la barette dan
                                                            s R7
  163 000000FE 5C7B            LDRB             R3, [R7, R1] ; R3 = ValCourante
                                                            , On met la valeur 
                                                            de Barette[n] dans 
                                                            R3
  164 00000100 EA4F 6403       LSL              R4, R3, #24 ; (ValCourante) <- 
                                                            (ValCourante) << 24
                                                            
  165 00000104         
  166 00000104 F04F 0500       MOV              R5, #0
  167 00000108         
  168 00000108         BoucleBit2
  169 00000108 F7FF FFFE       BL               Reset_SCLK
  170 0000010C         
  171 0000010C F014 4F00       TST              R4, #(0x1<<31) ; Compare le bit
                                                             de poid fort 32eme
                                                            
  172 00000110 D102            BNE              Bit2
  173 00000112 F7FF FFFE       BL               Reset_SIN
  174 00000116 E001            B                NextBit2
  175 00000118         
  176 00000118         Bit2
  177 00000118 F7FF FFFE       BL               Set_SIN
  178 0000011C         
  179 0000011C         NextBit2
  180 0000011C EA4F 0444       LSL              R4, R4, #1
  181 00000120 F7FF FFFE       BL               Set_SCLK
  182 00000124         
  183 00000124 F105 0501       ADD              R5, R5, #1  ; i++
  184 00000128 2D0C            CMP              R5, #12
  185 0000012A D1ED            BNE              BoucleBit2
  186 0000012C         
  187 0000012C F101 0101       ADD              R1, R1, #1
  188 00000130 2930            CMP              R1, #48
  189 00000132 D1E3            BNE              BoucleLed2
  190 00000134         
  191 00000134 F7FF FFFE       BL               Reset_SCLK
  192 00000138         
  193 00000138 F8DF 8030       LDR              R8 ,=DataSend
  194 0000013C F04F 0900       MOV              R9, #0
  195 00000140 F888 9000       STRB             R9, [R8]
  196 00000144 F85D EB04       POP{LR}
  197 00000148 4770            BX               LR
  198 0000014A         
  199 0000014A                 ENDP
  200 0000014A         
  201 0000014A         
  202 0000014A         
  203 0000014A         ;R1, R6, R10, R11, R12
  204 0000014A         ;Vérifier tempo
  205 0000014A         Tempo   PROC



ARM Macro Assembler    Page 8 


  206 0000014A         
  207 0000014A F04F 0B00       MOV              R11, #0
  208 0000014E         boucle_10N
  209 0000014E F04F 0A00       MOV              R10, #0
  210 00000152 F10B 0B01       ADD              R11, R11, #1
  211 00000156 4583            CMP              R11, R0
  212 00000158 BF08 4770       BXEQ             LR
  213 0000015C         
  214 0000015C         boucle
  215 0000015C F10A 0A01       ADD              R10, R10, #1
  216 00000160 F1BA 0FEF       CMP              R10, #MILSEC
  217 00000164 D1FA            BNE              boucle
  218 00000166         
  219 00000166 D0F2            BEQ              boucle_10N
  220 00000168                 ENDP
  221 00000168         
  222 00000168         
  223 00000168         
  224 00000168         ;*******************************************************
                       *******************
  225 00000168                 END
              00000000 
              00000000 
              40010800 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M3 --depe
nd=.\objects\fonctionetape2.d -o.\objects\fonctionetape2.o -I.\RTE\Device\STM32
F103RB -I.\RTE\_Simul_ -IC:\Users\cedri\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0
\CMSIS\Core\Include -IC:\Users\cedri\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP
\2.4.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 538" --predefine="_RTE_ SETA 1" --predef
ine="STM32F10X_MD SETA 1" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD 
SETA 1" --list=.\listings\fonctionetape2.lst FonctionEtape2.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MesDonnees 00000000

Symbol: MesDonnees
   Definitions
      At line 9 in file Lumiere.asm
   Uses
      None
Comment: MesDonnees unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Barrette1 00000000

Symbol: Barrette1
   Definitions
      At line 27 in file Lumiere.asm
   Uses
      At line 71 in file FonctionEtape2.asm
Comment: Barrette1 used once
BarretteN 00000030

Symbol: BarretteN
   Definitions
      At line 47 in file Lumiere.asm
   Uses
      None
Comment: BarretteN unused
Bit1 00000084

Symbol: Bit1
   Definitions
      At line 85 in file FonctionEtape2.asm
   Uses
      At line 81 in file FonctionEtape2.asm
Comment: Bit1 used once
Bit2 00000118

Symbol: Bit2
   Definitions
      At line 176 in file FonctionEtape2.asm
   Uses
      At line 172 in file FonctionEtape2.asm
Comment: Bit2 used once
BoucleBit 00000074

Symbol: BoucleBit
   Definitions
      At line 77 in file FonctionEtape2.asm
   Uses
      At line 94 in file FonctionEtape2.asm
Comment: BoucleBit used once
BoucleBit2 00000108

Symbol: BoucleBit2
   Definitions
      At line 168 in file FonctionEtape2.asm
   Uses
      At line 185 in file FonctionEtape2.asm
Comment: BoucleBit2 used once
BoucleLed 00000068

Symbol: BoucleLed
   Definitions
      At line 70 in file FonctionEtape2.asm
   Uses
      At line 98 in file FonctionEtape2.asm
Comment: BoucleLed used once
BoucleLed2 000000FC

Symbol: BoucleLed2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 161 in file FonctionEtape2.asm
   Uses
      At line 189 in file FonctionEtape2.asm
Comment: BoucleLed2 used once
DriverReg 000000F2

Symbol: DriverReg
   Definitions
      At line 156 in file FonctionEtape2.asm
   Uses
      At line 14 in file FonctionEtape2.asm
Comment: DriverReg used once
Driverglobal 00000060

Symbol: Driverglobal
   Definitions
      At line 65 in file FonctionEtape2.asm
   Uses
      At line 13 in file FonctionEtape2.asm
Comment: Driverglobal used once
NextBit 00000088

Symbol: NextBit
   Definitions
      At line 88 in file FonctionEtape2.asm
   Uses
      At line 83 in file FonctionEtape2.asm
Comment: NextBit used once
NextBit2 0000011C

Symbol: NextBit2
   Definitions
      At line 179 in file FonctionEtape2.asm
   Uses
      At line 174 in file FonctionEtape2.asm
Comment: NextBit2 used once
Reset_SCLK 000000C2

Symbol: Reset_SCLK
   Definitions
      At line 123 in file FonctionEtape2.asm
   Uses
      At line 16 in file FonctionEtape2.asm
      At line 78 in file FonctionEtape2.asm
      At line 100 in file FonctionEtape2.asm
      At line 169 in file FonctionEtape2.asm
      At line 191 in file FonctionEtape2.asm

Reset_SIN 000000E2

Symbol: Reset_SIN
   Definitions
      At line 144 in file FonctionEtape2.asm
   Uses
      At line 18 in file FonctionEtape2.asm
      At line 82 in file FonctionEtape2.asm
      At line 173 in file FonctionEtape2.asm




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Set_SCLK 000000B2

Symbol: Set_SCLK
   Definitions
      At line 112 in file FonctionEtape2.asm
   Uses
      At line 15 in file FonctionEtape2.asm
      At line 67 in file FonctionEtape2.asm
      At line 90 in file FonctionEtape2.asm
      At line 158 in file FonctionEtape2.asm
      At line 181 in file FonctionEtape2.asm

Set_SIN 000000D2

Symbol: Set_SIN
   Definitions
      At line 133 in file FonctionEtape2.asm
   Uses
      At line 17 in file FonctionEtape2.asm
      At line 86 in file FonctionEtape2.asm
      At line 177 in file FonctionEtape2.asm

Tempo 0000014A

Symbol: Tempo
   Definitions
      At line 205 in file FonctionEtape2.asm
   Uses
      At line 19 in file FonctionEtape2.asm
Comment: Tempo used once
boucle 0000015C

Symbol: boucle
   Definitions
      At line 214 in file FonctionEtape2.asm
   Uses
      At line 217 in file FonctionEtape2.asm
Comment: boucle used once
boucle_10N 0000014E

Symbol: boucle_10N
   Definitions
      At line 208 in file FonctionEtape2.asm
   Uses
      At line 219 in file FonctionEtape2.asm
Comment: boucle_10N used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 19 in file Lumiere.asm
   Uses
      None
Comment: moncode unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOBASEA 40010800

Symbol: GPIOBASEA
   Definitions
      At line 24 in file REG_UTILES.inc
   Uses
      At line 114 in file FonctionEtape2.asm
      At line 125 in file FonctionEtape2.asm
      At line 135 in file FonctionEtape2.asm
      At line 146 in file FonctionEtape2.asm

GPIOBASEB 40010C00

Symbol: GPIOBASEB
   Definitions
      At line 25 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEB unused
MILSEC 000000EF

Symbol: MILSEC
   Definitions
      At line 49 in file REG_UTILES.inc
   Uses
      At line 216 in file FonctionEtape2.asm
Comment: MILSEC used once
MaskBlank 00000004

Symbol: MaskBlank
   Definitions
      At line 37 in file REG_UTILES.inc
   Uses
      None
Comment: MaskBlank unused
MaskDsprg 00000002

Symbol: MaskDsprg
   Definitions
      At line 39 in file REG_UTILES.inc
   Uses
      None
Comment: MaskDsprg unused
MaskGsclk 00000001

Symbol: MaskGsclk
   Definitions
      At line 40 in file REG_UTILES.inc
   Uses
      None
Comment: MaskGsclk unused
MaskSclk 00000020

Symbol: MaskSclk
   Definitions
      At line 38 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSclk unused



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

MaskSerial_Dots 00000080

Symbol: MaskSerial_Dots
   Definitions
      At line 34 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_Dots unused
MaskSerial_In1 00000080

Symbol: MaskSerial_In1
   Definitions
      At line 33 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_In1 unused
MaskVprg 00000010

Symbol: MaskVprg
   Definitions
      At line 35 in file REG_UTILES.inc
   Uses
      None
Comment: MaskVprg unused
MaskXlat 00000008

Symbol: MaskXlat
   Definitions
      At line 36 in file REG_UTILES.inc
   Uses
      None
Comment: MaskXlat unused
OffsetInput 00000008

Symbol: OffsetInput
   Definitions
      At line 27 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetInput unused
OffsetOutput 0000000C

Symbol: OffsetOutput
   Definitions
      At line 28 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetOutput unused
OffsetReset 00000014

Symbol: OffsetReset
   Definitions
      At line 30 in file REG_UTILES.inc
   Uses
      At line 126 in file FonctionEtape2.asm
      At line 128 in file FonctionEtape2.asm
      At line 147 in file FonctionEtape2.asm
      At line 149 in file FonctionEtape2.asm




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

OffsetSet 00000010

Symbol: OffsetSet
   Definitions
      At line 29 in file REG_UTILES.inc
   Uses
      At line 115 in file FonctionEtape2.asm
      At line 117 in file FonctionEtape2.asm
      At line 136 in file FonctionEtape2.asm
      At line 138 in file FonctionEtape2.asm

SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 43 in file REG_UTILES.inc
   Uses
      None
Comment: SCB_VTOR unused
TIM1_CNT 40012C24

Symbol: TIM1_CNT
   Definitions
      At line 45 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_CNT unused
TIM1_SR 40012C10

Symbol: TIM1_SR
   Definitions
      At line 44 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_SR unused
TIM4_ARR 4000082C

Symbol: TIM4_ARR
   Definitions
      At line 46 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_ARR unused
TIM4_SR 40000810

Symbol: TIM4_SR
   Definitions
      At line 47 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_SR unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DataSend 00000000

Symbol: DataSend
   Definitions
      At line 20 in file FonctionEtape2.asm
   Uses
      At line 102 in file FonctionEtape2.asm
      At line 193 in file FonctionEtape2.asm

1 symbol
379 symbols in table

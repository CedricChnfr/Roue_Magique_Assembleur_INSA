


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         ;*******************************************************
                       *****************
    4 00000000                 THUMB
    5 00000000                 REQUIRE8
    6 00000000                 PRESERVE8
    7 00000000         ;*******************************************************
                       *****************
    8 00000000         
    9 00000000                 include          REG_UTILES.inc
    1 00000000         
    2 00000000         ;**************************************
    3 00000000         ;     Les adresess utiles  
    4 00000000         ;***************************************
    5 00000000         
    6 00000000         
    7 00000000         ;**************************************
    8 00000000         ;     Affectation des bits GPIO  
    9 00000000         ;***************************************
   10 00000000         ; GSLCK..... PA0 
   11 00000000         ; DSPRG..... PA1 
   12 00000000         ; BLANK..... PA2 
   13 00000000         ; XLAT...... PA3
   14 00000000         ; VPRG...... PA4
   15 00000000         ; SCLK...... PA5
   16 00000000         ; SIN1...... PA7
   17 00000000         ;Capteur.....PA8
   18 00000000         
   19 00000000         ;LED.........PB10
   20 00000000         ;****************************************/
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000 40010800 
                       GPIOBASEA
                               EQU              0X40010800
   25 00000000 40010C00 
                       GPIOBASEB
                               EQU              0X40010C00
   26 00000000         
   27 00000000 00000008 
                       OffsetInput
                               EQU              0x08
   28 00000000 0000000C 
                       OffsetOutput
                               EQU              0x0C
   29 00000000 00000010 
                       OffsetSet
                               EQU              0x10
   30 00000000 00000014 
                       OffsetReset
                               EQU              0x14
   31 00000000         
   32 00000000         
   33 00000000 00000080 
                       MaskSerial_In1
                               equ              0x80
   34 00000000 00000080 



ARM Macro Assembler    Page 2 


                       MaskSerial_Dots
                               equ              0x80
   35 00000000 00000010 
                       MaskVprg
                               equ              0x10
   36 00000000 00000008 
                       MaskXlat
                               equ              0x08
   37 00000000 00000004 
                       MaskBlank
                               equ              0x04
   38 00000000 00000020 
                       MaskSclk
                               equ              0x20
   39 00000000 00000002 
                       MaskDsprg
                               equ              0x02
   40 00000000 00000001 
                       MaskGsclk
                               equ              0x01
   41 00000000         
   42 00000000         
   43 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   44 00000000 40012C10 
                       TIM1_SR EQU              0x40012c10
   45 00000000 40012C24 
                       TIM1_CNT
                               EQU              0x40012c24
   46 00000000 4000082C 
                       TIM4_ARR
                               EQU              0x4000082C
   47 00000000 40000810 
                       TIM4_SR EQU              0x40000810
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         
   52 00000000         
   53 00000000                 END
   10 00000000         
   11 00000000         
   12 00000000         
   13 00000000         ;*******************************************************
                       *****************
   14 00000000         ;      IMPORT/EXPORT Système
   15 00000000         ;*******************************************************
                       *****************
   16 00000000         
   17 00000000                 IMPORT           ||Lib$$Request$$armlib|| [CODE,
WEAK]
   18 00000000         
   19 00000000                 IMPORT           Allume_LED
   20 00000000                 IMPORT           Eteint_LED
   21 00000000         ;IMPORT Capteur
   22 00000000         
   23 00000000         
   24 00000000         ; IMPORT/EXPORT de procédure           



ARM Macro Assembler    Page 3 


   25 00000000         
   26 00000000                 IMPORT           Init_Cible
   27 00000000         
   28 00000000         
   29 00000000                 EXPORT           main
   30 00000000         
   31 00000000         ;*******************************************************
                       ************************
   32 00000000         
   33 00000000         
   34 00000000         ;*******************************************************
                       ************************
   35 00000000                 AREA             mesdonnees, data, readwrite
   36 00000000         
   37 00000000         
   38 00000000         
   39 00000000         
   40 00000000         ;*******************************************************
                       ************************
   41 00000000         
   42 00000000                 AREA             moncode, code, readonly
   43 00000000         
   44 00000000         
   45 00000000         
   46 00000000         ;*******************************************************
                       ************************
   47 00000000         ; Procédure principale et point d'entrée du projet
   48 00000000         ;*******************************************************
                       ************************
   49 00000000         main    PROC
   50 00000000         ;*******************************************************
                       ************************
   51 00000000         
   52 00000000         
   53 00000000         ;Bool Capteur
   54 00000000         ;Bool Led
   55 00000000         ;OldEtat = 0
   56 00000000         ;Cpt = 0
   57 00000000         ;N=10
   58 00000000         ;
   59 00000000         ;Tant que 1
   60 00000000         ;
   61 00000000         ;FrontMontant:
   62 00000000         ; Si OldEtat == 0 et Capteur == 1
   63 00000000         ;  Led = !Led
   64 00000000         ;  Cpt = Cpt + 1 
   65 00000000         ; Si Compteur >= N
   66 00000000         ;  Led = 1
   67 00000000         ; 
   68 00000000         ; OldEtat = Capteur
   69 00000000         ;
   70 00000000         ;Fin tant que
   71 00000000         ;
   72 00000000         ;
   73 00000000         ;Var DCB 1,2,3
   74 00000000         ;  DCB 4, 5, 6
   75 00000000         ;
   76 00000000         ;
   77 00000000         ;LDR R4,= Var



ARM Macro Assembler    Page 4 


   78 00000000         
   79 00000000         
   80 00000000 F04F 0000       MOV              R0,#0
   81 00000004 F7FF FFFE       BL               Init_Cible  ;   ;Initialisation
                                                             de la cible
   82 00000008         
   83 00000008         
   84 00000008         
   85 00000008         
   86 00000008         boucle
   87 00000008         
   88 00000008         
   89 00000008 4C06            LDR              R4 ,= 0X40010808 ; Charge l'adr
                                                            esse 0X40010808 dan
                                                            s le registre R5.
   90 0000000A 8825            LDRH             R5,[R4]     ; Stock la valeur d
                                                            e l'adresse de R4 d
                                                            ans R5
   91 0000000C F405 7580       AND              R5,R5, #0x0100 ; Vérifier si le
                                                             bit 8 de l'adresse
                                                             chargée dans R5 es
                                                            t à 1 ou à 0.
   92 00000010         ;TST R4, #0x0100  ; Vérifie si le bit 8 de R5 est à 1 ou
                        à 0
   93 00000010 2D00            CMP              R5, #0      ; Compare R5 à zéro
                                                            
   94 00000012 D102            BNE              Eteint      ; Si R5 est égal à 
                                                            zéro, saute à l'éti
                                                            quette Allume_LED (
                                                            BEQ n'affecte pas L
                                                            R, il fait un saut)
                                                            
   95 00000014 F7FF FFFE       BL               Allume_LED  ; Si R5 est différe
                                                            nt de zéro, saute à
                                                             l'étiquette Eteint
                                                            _LED. Avec R5 à 0x8
                                                            0 pour 8eme bit à 1
                                                             (BEQ)
   96 00000018         
   97 00000018 E7F6            B                boucle
   98 0000001A         
   99 0000001A         
  100 0000001A         Eteint
  101 0000001A F7FF FFFE       BL               Eteint_LED
  102 0000001E E7F3            B                boucle
  103 00000020         
  104 00000020         
  105 00000020         
  106 00000020         
  107 00000020         
  108 00000020 E7FE            B                .           ; boucle inifinie t
                                                            erminale...
  109 00000022         
  110 00000022                 ENDP
  111 00000022         
  112 00000022                 END
              00 00 40010808 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\principale.d -o.\objects\principale.o -I.\RTE\Device\STM



ARM Macro Assembler    Page 5 


32F107VC -I.\RTE\_R_el -IC:\Programdata\Keil\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Co
re\Include -IC:\Programdata\Keil\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Incl
ude --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__
UVISION_VERSION SETA 534" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_CL 
SETA 1" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_CL SETA 1" --list=.\l
istings\principale.lst Principale.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

mesdonnees 00000000

Symbol: mesdonnees
   Definitions
      At line 35 in file Principale.asm
   Uses
      None
Comment: mesdonnees unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Eteint 0000001A

Symbol: Eteint
   Definitions
      At line 100 in file Principale.asm
   Uses
      At line 94 in file Principale.asm
Comment: Eteint used once
boucle 00000008

Symbol: boucle
   Definitions
      At line 86 in file Principale.asm
   Uses
      At line 97 in file Principale.asm
      At line 102 in file Principale.asm

main 00000000

Symbol: main
   Definitions
      At line 49 in file Principale.asm
   Uses
      At line 29 in file Principale.asm
Comment: main used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 42 in file Principale.asm
   Uses
      None
Comment: moncode unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOBASEA 40010800

Symbol: GPIOBASEA
   Definitions
      At line 24 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEA unused
GPIOBASEB 40010C00

Symbol: GPIOBASEB
   Definitions
      At line 25 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEB unused
MaskBlank 00000004

Symbol: MaskBlank
   Definitions
      At line 37 in file REG_UTILES.inc
   Uses
      None
Comment: MaskBlank unused
MaskDsprg 00000002

Symbol: MaskDsprg
   Definitions
      At line 39 in file REG_UTILES.inc
   Uses
      None
Comment: MaskDsprg unused
MaskGsclk 00000001

Symbol: MaskGsclk
   Definitions
      At line 40 in file REG_UTILES.inc
   Uses
      None
Comment: MaskGsclk unused
MaskSclk 00000020

Symbol: MaskSclk
   Definitions
      At line 38 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSclk unused
MaskSerial_Dots 00000080

Symbol: MaskSerial_Dots
   Definitions
      At line 34 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_Dots unused
MaskSerial_In1 00000080

Symbol: MaskSerial_In1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 33 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_In1 unused
MaskVprg 00000010

Symbol: MaskVprg
   Definitions
      At line 35 in file REG_UTILES.inc
   Uses
      None
Comment: MaskVprg unused
MaskXlat 00000008

Symbol: MaskXlat
   Definitions
      At line 36 in file REG_UTILES.inc
   Uses
      None
Comment: MaskXlat unused
OffsetInput 00000008

Symbol: OffsetInput
   Definitions
      At line 27 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetInput unused
OffsetOutput 0000000C

Symbol: OffsetOutput
   Definitions
      At line 28 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetOutput unused
OffsetReset 00000014

Symbol: OffsetReset
   Definitions
      At line 30 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetReset unused
OffsetSet 00000010

Symbol: OffsetSet
   Definitions
      At line 29 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetSet unused
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 43 in file REG_UTILES.inc
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: SCB_VTOR unused
TIM1_CNT 40012C24

Symbol: TIM1_CNT
   Definitions
      At line 45 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_CNT unused
TIM1_SR 40012C10

Symbol: TIM1_SR
   Definitions
      At line 44 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_SR unused
TIM4_ARR 4000082C

Symbol: TIM4_ARR
   Definitions
      At line 46 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_ARR unused
TIM4_SR 40000810

Symbol: TIM4_SR
   Definitions
      At line 47 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_SR unused
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Allume_LED 00000000

Symbol: Allume_LED
   Definitions
      At line 19 in file Principale.asm
   Uses
      At line 95 in file Principale.asm
Comment: Allume_LED used once
Eteint_LED 00000000

Symbol: Eteint_LED
   Definitions
      At line 20 in file Principale.asm
   Uses
      At line 101 in file Principale.asm
Comment: Eteint_LED used once
Init_Cible 00000000

Symbol: Init_Cible
   Definitions
      At line 26 in file Principale.asm
   Uses
      At line 81 in file Principale.asm
Comment: Init_Cible used once
|Lib$$Request$$armlib| 00000000

Symbol: |Lib$$Request$$armlib|
   Definitions
      At line 17 in file Principale.asm
   Uses
      None
Comment: |Lib$$Request$$armlib| unused
4 symbols
365 symbols in table

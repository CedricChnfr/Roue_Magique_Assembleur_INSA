


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         ;*******************************************************
                       *****************
    4 00000000                 THUMB
    5 00000000                 REQUIRE8
    6 00000000                 PRESERVE8
    7 00000000         ;*******************************************************
                       *****************
    8 00000000         
    9 00000000                 include          REG_UTILES.inc
    1 00000000         
    2 00000000         ;**************************************
    3 00000000         ;     Les adresess utiles  
    4 00000000         ;***************************************
    5 00000000         
    6 00000000         
    7 00000000         ;**************************************
    8 00000000         ;     Affectation des bits GPIO  
    9 00000000         ;***************************************
   10 00000000         ; GSLCK..... PA0 
   11 00000000         ; DSPRG..... PA1 
   12 00000000         ; BLANK..... PA2 
   13 00000000         ; XLAT...... PA3
   14 00000000         ; VPRG...... PA4
   15 00000000         ; SCLK...... PA5
   16 00000000         ; SIN1...... PA7
   17 00000000         ;Capteur.....PA8
   18 00000000         
   19 00000000         ;LED.........PB10
   20 00000000         ;****************************************/
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000 40010800 
                       GPIOBASEA
                               EQU              0X40010800
   25 00000000 40010C00 
                       GPIOBASEB
                               EQU              0X40010C00
   26 00000000         
   27 00000000 00000008 
                       OffsetInput
                               EQU              0x08
   28 00000000 0000000C 
                       OffsetOutput
                               EQU              0x0C
   29 00000000 00000010 
                       OffsetSet
                               EQU              0x10
   30 00000000 00000014 
                       OffsetReset
                               EQU              0x14
   31 00000000         
   32 00000000         
   33 00000000 00000080 
                       MaskSerial_In1
                               equ              0x80
   34 00000000 00000080 



ARM Macro Assembler    Page 2 


                       MaskSerial_Dots
                               equ              0x80
   35 00000000 00000010 
                       MaskVprg
                               equ              0x10
   36 00000000 00000008 
                       MaskXlat
                               equ              0x08
   37 00000000 00000004 
                       MaskBlank
                               equ              0x04
   38 00000000 00000020 
                       MaskSclk
                               equ              0x20
   39 00000000 00000002 
                       MaskDsprg
                               equ              0x02
   40 00000000 00000001 
                       MaskGsclk
                               equ              0x01
   41 00000000         
   42 00000000         
   43 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   44 00000000 40012C10 
                       TIM1_SR EQU              0x40012c10
   45 00000000 40012C24 
                       TIM1_CNT
                               EQU              0x40012c24
   46 00000000 4000082C 
                       TIM4_ARR
                               EQU              0x4000082C
   47 00000000 40000810 
                       TIM4_SR EQU              0x40000810
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         
   52 00000000         
   53 00000000                 END
   10 00000000         
   11 00000000         
   12 00000000         
   13 00000000         ;*******************************************************
                       *****************
   14 00000000         ;      IMPORT/EXPORT Syst?me
   15 00000000         ;*******************************************************
                       *****************
   16 00000000         
   17 00000000                 IMPORT           ||Lib$$Request$$armlib|| [CODE,
WEAK]
   18 00000000         
   19 00000000                 IMPORT           Allume_LED
   20 00000000                 IMPORT           Eteint_LED
   21 00000000         ;IMPORT Capteur
   22 00000000         
   23 00000000         
   24 00000000         ; IMPORT/EXPORT de proc?dure           



ARM Macro Assembler    Page 3 


   25 00000000         
   26 00000000                 IMPORT           Init_Cible
   27 00000000         
   28 00000000         
   29 00000000                 EXPORT           main
   30 00000000         
   31 00000000         ;*******************************************************
                       ************************
   32 00000000         
   33 00000000         
   34 00000000         ;*******************************************************
                       ************************
   35 00000000                 AREA             mesdonnees, data, readwrite
   36 00000000         
   37 00000000         
   38 00000000         
   39 00000000         
   40 00000000         ;*******************************************************
                       ************************
   41 00000000         
   42 00000000                 AREA             moncode, code, readonly
   43 00000000         
   44 00000000         
   45 00000000         
   46 00000000         ;*******************************************************
                       ************************
   47 00000000         ; Proc?dure principale et point d'entr?e du projet
   48 00000000         ;*******************************************************
                       ************************
   49 00000000         main    PROC
   50 00000000         ;*******************************************************
                       ************************
   51 00000000         
   52 00000000         
   53 00000000         ;OldEtat = 0
   54 00000000         ;Cpt = 0
   55 00000000         ;N=10
   56 00000000         ;
   57 00000000         ;Tant que 1
   58 00000000         ;
   59 00000000         ;FrontMontant:
   60 00000000         ; Si OldEtat == 0 et Capteur == 1
   61 00000000         ;  Led = !Led
   62 00000000         ;  Cpt = Cpt + 1 
   63 00000000         ; Si Compteur >= N
   64 00000000         ;  Led = 1
   65 00000000         ; 
   66 00000000         ; OldEtat = Capteur
   67 00000000         ;
   68 00000000         ;Fin tant que
   69 00000000         ;
   70 00000000         ;
   71 00000000         
   72 00000000         
   73 00000000         
   74 00000000 F04F 0000       MOV              R0,#0
   75 00000004 F7FF FFFE       BL               Init_Cible  ;    ;Initialisatio
                                                            n de la cible
   76 00000008         



ARM Macro Assembler    Page 4 


   77 00000008         
   78 00000008         
   79 00000008 00 00   OldEtat DCW              0           ;Variable pour stoc
                                                            ker l'?tat pr?c?den
                                                            t du capteur
   80 0000000A 00      Cpt     DCB              0           ;Compteur de fronts
                                                             montants d?tect?s
   81 0000000B 0000000A 
                       N       EQU              10          ;Nombre de fronts m
                                                            ontants ? d?tecter 
                                                            avant de rester all
                                                            um?
   82 0000000B         
   83 0000000B         boucle
   84 0000000B         
   85 0000000B         
   86 0000000B         ;Etat du capteur
   87 0000000B 00 4C1A         LDR              R4 ,= 0X40010808 ; Chargement d
                                                            e l'adresse dans le
                                                             registre
   88 0000000E F8B4 8000       LDRH             R8, [R4]    ; Stock la valeur d
                                                            e l'adresse de R4 d
                                                            ans R5
   89 00000012 F04F 090A       LDR              R9, =N
   90 00000016 F8B9 A000       LDRH             R10, [R9]
   91 0000001A F408 7880       AND              R8,R8, #0x0100 ; V?rifier si le
                                                             bit 8 de l'adresse
                                                             charg?e dans R5 es
                                                            t ? 1 ou ? 0.
   92 0000001E F1B8 0F00       CMP              R8, #0      ; Compare R8 ? z?ro
                                                             OU CMP R8, #(0x01 
                                                            << 8)
   93 00000022 D102            BNE              front_montant_allume ; Si zero 
                                                            alors j'allume
   94 00000024 F04F 0700       MOV              R7,#0x00    ; 
   95 00000028 E7F0            B                boucle
   96 0000002A         
   97 0000002A         front_montant_allume
   98 0000002A         
   99 0000002A F10A 0A01       ADD              R10, R10, #1
  100 0000002E F00A 0B0A       AND              R11,R10, #0x0A
  101 00000032 F1BB 0F0A       CMP              R11, #0x0A
  102 00000036 D01A            BEQ              Allume
  103 00000038         
  104 00000038         allume
  105 00000038 F7FF FFFE       BL               Allume_LED
  106 0000003C F8B4 8000       LDRH             R8, [R4]    ; Stock la valeur d
                                                            e l'adresse de R4 d
                                                            ans R5
  107 00000040 F408 7880       AND              R8,R8, #0x0100
  108 00000044 F1B8 0F00       CMP              R8, #0
  109 00000048 D100            BNE              front_montant_eteint
  110 0000004A         
  111 0000004A E7F5            B                allume
  112 0000004C         
  113 0000004C         front_montant_eteint
  114 0000004C         
  115 0000004C         
  116 0000004C F10A 0A01       ADD              R10, #0x01



ARM Macro Assembler    Page 5 


  117 00000050 F00A 0B0A       AND              R11,R10, #0x0A
  118 00000054 F1BB 0F0A       CMP              R11, #0x0A
  119 00000058 D009            BEQ              Allume
  120 0000005A         
  121 0000005A         eteint
  122 0000005A F7FF FFFE       BL               Eteint_LED
  123 0000005E F8B4 8000       LDRH             R8, [R4]    ; Stock la valeur d
                                                            e l'adresse de R4 d
                                                            ans R5
  124 00000062 F408 7880       AND              R8,R8, #0x0100
  125 00000066 F1B8 0F00       CMP              R8, #0
  126 0000006A D1DE            BNE              front_montant_allume
  127 0000006C         
  128 0000006C E7F5            B                eteint
  129 0000006E         
  130 0000006E         boucle2
  131 0000006E         Allume
  132 0000006E F7FF FFFE       BL               Allume_LED
  133 00000072 E7FC            B                boucle2
  134 00000074         
  135 00000074         
  136 00000074         
  137 00000074         
  138 00000074         
  139 00000074         
  140 00000074         
  141 00000074         ;check
  142 00000074         ;  LDR R6, =OldEtat
  143 00000074         ;  LDRH R7,[R6]  
  144 00000074         ;  MOV R7,#0x01
  145 00000074         ;  AND R7,R7, #0x01
  146 00000074         ;  CMP R6, #0
  147 00000074         ;  BNE exstate1
  148 00000074         
  149 00000074 E7FE            B                .           ; boucle inifinie t
                                                            erminale...
  150 00000076         
  151 00000076                 ENDP
  152 00000076         
  153 00000076                 END
              00 00 40010808 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M3 --depe
nd=.\objects\principale.d -o.\objects\principale.o -I.\RTE\Device\STM32F103RB -
I.\RTE\_Simul_ -IC:\Users\cedri\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\C
ore\Include -IC:\Users\cedri\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\D
evice\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --pre
define="__UVISION_VERSION SETA 538" --predefine="_RTE_ SETA 1" --predefine="STM
32F10X_MD SETA 1" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" 
--list=.\listings\principale.lst Principale.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

mesdonnees 00000000

Symbol: mesdonnees
   Definitions
      At line 35 in file Principale.asm
   Uses
      None
Comment: mesdonnees unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Allume 0000006E

Symbol: Allume
   Definitions
      At line 131 in file Principale.asm
   Uses
      At line 102 in file Principale.asm
      At line 119 in file Principale.asm

Cpt 0000000A

Symbol: Cpt
   Definitions
      At line 80 in file Principale.asm
   Uses
      None
Comment: Cpt unused
OldEtat 00000008

Symbol: OldEtat
   Definitions
      At line 79 in file Principale.asm
   Uses
      None
Comment: OldEtat unused
allume 00000038

Symbol: allume
   Definitions
      At line 104 in file Principale.asm
   Uses
      At line 111 in file Principale.asm
Comment: allume used once
boucle 0000000C

Symbol: boucle
   Definitions
      At line 83 in file Principale.asm
   Uses
      At line 95 in file Principale.asm
Comment: boucle used once
boucle2 0000006E

Symbol: boucle2
   Definitions
      At line 130 in file Principale.asm
   Uses
      At line 133 in file Principale.asm
Comment: boucle2 used once
eteint 0000005A

Symbol: eteint
   Definitions
      At line 121 in file Principale.asm
   Uses
      At line 128 in file Principale.asm
Comment: eteint used once
front_montant_allume 0000002A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: front_montant_allume
   Definitions
      At line 97 in file Principale.asm
   Uses
      At line 93 in file Principale.asm
      At line 126 in file Principale.asm

front_montant_eteint 0000004C

Symbol: front_montant_eteint
   Definitions
      At line 113 in file Principale.asm
   Uses
      At line 109 in file Principale.asm
Comment: front_montant_eteint used once
main 00000000

Symbol: main
   Definitions
      At line 49 in file Principale.asm
   Uses
      At line 29 in file Principale.asm
Comment: main used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 42 in file Principale.asm
   Uses
      None
Comment: moncode unused
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOBASEA 40010800

Symbol: GPIOBASEA
   Definitions
      At line 24 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEA unused
GPIOBASEB 40010C00

Symbol: GPIOBASEB
   Definitions
      At line 25 in file REG_UTILES.inc
   Uses
      None
Comment: GPIOBASEB unused
MaskBlank 00000004

Symbol: MaskBlank
   Definitions
      At line 37 in file REG_UTILES.inc
   Uses
      None
Comment: MaskBlank unused
MaskDsprg 00000002

Symbol: MaskDsprg
   Definitions
      At line 39 in file REG_UTILES.inc
   Uses
      None
Comment: MaskDsprg unused
MaskGsclk 00000001

Symbol: MaskGsclk
   Definitions
      At line 40 in file REG_UTILES.inc
   Uses
      None
Comment: MaskGsclk unused
MaskSclk 00000020

Symbol: MaskSclk
   Definitions
      At line 38 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSclk unused
MaskSerial_Dots 00000080

Symbol: MaskSerial_Dots
   Definitions
      At line 34 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_Dots unused
MaskSerial_In1 00000080

Symbol: MaskSerial_In1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 33 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_In1 unused
MaskVprg 00000010

Symbol: MaskVprg
   Definitions
      At line 35 in file REG_UTILES.inc
   Uses
      None
Comment: MaskVprg unused
MaskXlat 00000008

Symbol: MaskXlat
   Definitions
      At line 36 in file REG_UTILES.inc
   Uses
      None
Comment: MaskXlat unused
N 0000000A

Symbol: N
   Definitions
      At line 81 in file Principale.asm
   Uses
      At line 89 in file Principale.asm
Comment: N used once
OffsetInput 00000008

Symbol: OffsetInput
   Definitions
      At line 27 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetInput unused
OffsetOutput 0000000C

Symbol: OffsetOutput
   Definitions
      At line 28 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetOutput unused
OffsetReset 00000014

Symbol: OffsetReset
   Definitions
      At line 30 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetReset unused
OffsetSet 00000010

Symbol: OffsetSet
   Definitions
      At line 29 in file REG_UTILES.inc
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: OffsetSet unused
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 43 in file REG_UTILES.inc
   Uses
      None
Comment: SCB_VTOR unused
TIM1_CNT 40012C24

Symbol: TIM1_CNT
   Definitions
      At line 45 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_CNT unused
TIM1_SR 40012C10

Symbol: TIM1_SR
   Definitions
      At line 44 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_SR unused
TIM4_ARR 4000082C

Symbol: TIM4_ARR
   Definitions
      At line 46 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_ARR unused
TIM4_SR 40000810

Symbol: TIM4_SR
   Definitions
      At line 47 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_SR unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Allume_LED 00000000

Symbol: Allume_LED
   Definitions
      At line 19 in file Principale.asm
   Uses
      At line 105 in file Principale.asm
      At line 132 in file Principale.asm

Eteint_LED 00000000

Symbol: Eteint_LED
   Definitions
      At line 20 in file Principale.asm
   Uses
      At line 122 in file Principale.asm
Comment: Eteint_LED used once
Init_Cible 00000000

Symbol: Init_Cible
   Definitions
      At line 26 in file Principale.asm
   Uses
      At line 75 in file Principale.asm
Comment: Init_Cible used once
|Lib$$Request$$armlib| 00000000

Symbol: |Lib$$Request$$armlib|
   Definitions
      At line 17 in file Principale.asm
   Uses
      None
Comment: |Lib$$Request$$armlib| unused
4 symbols
373 symbols in table
